# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Java CI with Maven

on:
  push:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Setup JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'adopt'
    - name: Cache local Maven repository
      uses: actions/cache@v4
      id: cache
      with:
        path: |
            ~/.m2/repository
        key: ${{ runner.os }}-Ultimates-${{ hashFiles('**/Ultimates/pom.xml') }}
        restore-keys: ${{ runner.os }}-Ultimates-
    - name: Clone Atlas
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: kNoAPP/atlas
        path: atlas
    - name: Clone Ultimates
      uses: actions/checkout@v2
      with:
        repository: kNoAPP/ultimates
        path: ultimates
    - name: Build Atlas
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
          cd atlas
          mvn --batch-mode --update-snapshots install
    - name: Build Ultimates
      run: |
          cd ultimates
          mvn --batch-mode --update-snapshots verify
    - name: Restart server
      run: |
          curl "https://panel.knoban.com/api/client/servers/${{ secrets.PTERODACTYL_CONTAINER }}/power" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_APITOKEN }}' \
          -X POST \
          -d '{"signal": "restart"}'
    - name: Upload Ultimates
      run: |
          cd ultimates
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo $VERSION
          mv ./target/ultimates-$VERSION.jar ./target/Ultimates.jar
          curl "https://panel.knoban.com/api/client/servers/${{ secrets.PTERODACTYL_CONTAINER }}/files/delete" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_APITOKEN }}' \
          -X POST \
          -d '{"root": "/plugins", "files": ["Ultimates.jar"]}'
          curl "https://panel.knoban.com/api/client/servers/${{ secrets.PTERODACTYL_CONTAINER }}/files/write?file=%2Fplugins%2FUltimates.jar" \
          -H 'Accept: application/json' \
          -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_APITOKEN }}' \
          -X POST \
          --data-binary '@./target/Ultimates.jar'
